cmake_minimum_required(VERSION 2.8)

project(EventDetector)

add_executable(${PROJECT_NAME} "main.cpp" feature_aggregator.cpp feature_normalizer.cpp fft_window.cpp mel_basis.cpp weights.cpp model.cpp postprocessing.cpp wavread.cpp
    preprocessing.cpp TestLocalFile.cpp EventDetector.cpp File.cpp)

SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)
if(ARC STREQUAL WIN32)
     MESSAGE(STATUS “This is windows.”)
     include_directories(../alsautils/)
     include_directories(../eigen/)
     include_directories(../aubio-master/src)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
     target_link_libraries(${PROJECT_NAME} m pthread asound)
 elseif(ARC STREQUAL ARM)
     include_directories(../tiny-dnn-master/)
     include_directories(../tiny-dnn-master/tiny_dnn)
     include_directories(./alsa/)
     include_directories(./)
     include_directories(./alsautils)
     target_link_libraries(${PROJECT_NAME} "/home/wangwei/QtProjects/APM/alsa-lib/usr/lib/libasound.so")
     include_directories(../eigen/)
     include_directories(../aubio-master/src)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -lstdc++ -O3")
     target_link_libraries(${PROJECT_NAME} m pthread)
endif()
